package com.example.thymeleaf.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class BrotherExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_brother
     *
     * @mbggenerated Mon Jul 23 11:10:52 CST 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_brother
     *
     * @mbggenerated Mon Jul 23 11:10:52 CST 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_brother
     *
     * @mbggenerated Mon Jul 23 11:10:52 CST 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_brother
     *
     * @mbggenerated Mon Jul 23 11:10:52 CST 2018
     */
    public BrotherExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_brother
     *
     * @mbggenerated Mon Jul 23 11:10:52 CST 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_brother
     *
     * @mbggenerated Mon Jul 23 11:10:52 CST 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_brother
     *
     * @mbggenerated Mon Jul 23 11:10:52 CST 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_brother
     *
     * @mbggenerated Mon Jul 23 11:10:52 CST 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_brother
     *
     * @mbggenerated Mon Jul 23 11:10:52 CST 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_brother
     *
     * @mbggenerated Mon Jul 23 11:10:52 CST 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_brother
     *
     * @mbggenerated Mon Jul 23 11:10:52 CST 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_brother
     *
     * @mbggenerated Mon Jul 23 11:10:52 CST 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_brother
     *
     * @mbggenerated Mon Jul 23 11:10:52 CST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_brother
     *
     * @mbggenerated Mon Jul 23 11:10:52 CST 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_brother
     *
     * @mbggenerated Mon Jul 23 11:10:52 CST 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andBrotherIdIsNull() {
            addCriterion("brother_id is null");
            return (Criteria) this;
        }

        public Criteria andBrotherIdIsNotNull() {
            addCriterion("brother_id is not null");
            return (Criteria) this;
        }

        public Criteria andBrotherIdEqualTo(Integer value) {
            addCriterion("brother_id =", value, "brotherId");
            return (Criteria) this;
        }

        public Criteria andBrotherIdNotEqualTo(Integer value) {
            addCriterion("brother_id <>", value, "brotherId");
            return (Criteria) this;
        }

        public Criteria andBrotherIdGreaterThan(Integer value) {
            addCriterion("brother_id >", value, "brotherId");
            return (Criteria) this;
        }

        public Criteria andBrotherIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("brother_id >=", value, "brotherId");
            return (Criteria) this;
        }

        public Criteria andBrotherIdLessThan(Integer value) {
            addCriterion("brother_id <", value, "brotherId");
            return (Criteria) this;
        }

        public Criteria andBrotherIdLessThanOrEqualTo(Integer value) {
            addCriterion("brother_id <=", value, "brotherId");
            return (Criteria) this;
        }

        public Criteria andBrotherIdIn(List<Integer> values) {
            addCriterion("brother_id in", values, "brotherId");
            return (Criteria) this;
        }

        public Criteria andBrotherIdNotIn(List<Integer> values) {
            addCriterion("brother_id not in", values, "brotherId");
            return (Criteria) this;
        }

        public Criteria andBrotherIdBetween(Integer value1, Integer value2) {
            addCriterion("brother_id between", value1, value2, "brotherId");
            return (Criteria) this;
        }

        public Criteria andBrotherIdNotBetween(Integer value1, Integer value2) {
            addCriterion("brother_id not between", value1, value2, "brotherId");
            return (Criteria) this;
        }

        public Criteria andArticleIdIsNull() {
            addCriterion("article_id is null");
            return (Criteria) this;
        }

        public Criteria andArticleIdIsNotNull() {
            addCriterion("article_id is not null");
            return (Criteria) this;
        }

        public Criteria andArticleIdEqualTo(Integer value) {
            addCriterion("article_id =", value, "articleId");
            return (Criteria) this;
        }

        public Criteria andArticleIdNotEqualTo(Integer value) {
            addCriterion("article_id <>", value, "articleId");
            return (Criteria) this;
        }

        public Criteria andArticleIdGreaterThan(Integer value) {
            addCriterion("article_id >", value, "articleId");
            return (Criteria) this;
        }

        public Criteria andArticleIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("article_id >=", value, "articleId");
            return (Criteria) this;
        }

        public Criteria andArticleIdLessThan(Integer value) {
            addCriterion("article_id <", value, "articleId");
            return (Criteria) this;
        }

        public Criteria andArticleIdLessThanOrEqualTo(Integer value) {
            addCriterion("article_id <=", value, "articleId");
            return (Criteria) this;
        }

        public Criteria andArticleIdIn(List<Integer> values) {
            addCriterion("article_id in", values, "articleId");
            return (Criteria) this;
        }

        public Criteria andArticleIdNotIn(List<Integer> values) {
            addCriterion("article_id not in", values, "articleId");
            return (Criteria) this;
        }

        public Criteria andArticleIdBetween(Integer value1, Integer value2) {
            addCriterion("article_id between", value1, value2, "articleId");
            return (Criteria) this;
        }

        public Criteria andArticleIdNotBetween(Integer value1, Integer value2) {
            addCriterion("article_id not between", value1, value2, "articleId");
            return (Criteria) this;
        }

        public Criteria andBrotherUrlIsNull() {
            addCriterion("brother_url is null");
            return (Criteria) this;
        }

        public Criteria andBrotherUrlIsNotNull() {
            addCriterion("brother_url is not null");
            return (Criteria) this;
        }

        public Criteria andBrotherUrlEqualTo(String value) {
            addCriterion("brother_url =", value, "brotherUrl");
            return (Criteria) this;
        }

        public Criteria andBrotherUrlNotEqualTo(String value) {
            addCriterion("brother_url <>", value, "brotherUrl");
            return (Criteria) this;
        }

        public Criteria andBrotherUrlGreaterThan(String value) {
            addCriterion("brother_url >", value, "brotherUrl");
            return (Criteria) this;
        }

        public Criteria andBrotherUrlGreaterThanOrEqualTo(String value) {
            addCriterion("brother_url >=", value, "brotherUrl");
            return (Criteria) this;
        }

        public Criteria andBrotherUrlLessThan(String value) {
            addCriterion("brother_url <", value, "brotherUrl");
            return (Criteria) this;
        }

        public Criteria andBrotherUrlLessThanOrEqualTo(String value) {
            addCriterion("brother_url <=", value, "brotherUrl");
            return (Criteria) this;
        }

        public Criteria andBrotherUrlLike(String value) {
            addCriterion("brother_url like", value, "brotherUrl");
            return (Criteria) this;
        }

        public Criteria andBrotherUrlNotLike(String value) {
            addCriterion("brother_url not like", value, "brotherUrl");
            return (Criteria) this;
        }

        public Criteria andBrotherUrlIn(List<String> values) {
            addCriterion("brother_url in", values, "brotherUrl");
            return (Criteria) this;
        }

        public Criteria andBrotherUrlNotIn(List<String> values) {
            addCriterion("brother_url not in", values, "brotherUrl");
            return (Criteria) this;
        }

        public Criteria andBrotherUrlBetween(String value1, String value2) {
            addCriterion("brother_url between", value1, value2, "brotherUrl");
            return (Criteria) this;
        }

        public Criteria andBrotherUrlNotBetween(String value1, String value2) {
            addCriterion("brother_url not between", value1, value2, "brotherUrl");
            return (Criteria) this;
        }

        public Criteria andDomainIdIsNull() {
            addCriterion("domain_id is null");
            return (Criteria) this;
        }

        public Criteria andDomainIdIsNotNull() {
            addCriterion("domain_id is not null");
            return (Criteria) this;
        }

        public Criteria andDomainIdEqualTo(Integer value) {
            addCriterion("domain_id =", value, "domainId");
            return (Criteria) this;
        }

        public Criteria andDomainIdNotEqualTo(Integer value) {
            addCriterion("domain_id <>", value, "domainId");
            return (Criteria) this;
        }

        public Criteria andDomainIdGreaterThan(Integer value) {
            addCriterion("domain_id >", value, "domainId");
            return (Criteria) this;
        }

        public Criteria andDomainIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("domain_id >=", value, "domainId");
            return (Criteria) this;
        }

        public Criteria andDomainIdLessThan(Integer value) {
            addCriterion("domain_id <", value, "domainId");
            return (Criteria) this;
        }

        public Criteria andDomainIdLessThanOrEqualTo(Integer value) {
            addCriterion("domain_id <=", value, "domainId");
            return (Criteria) this;
        }

        public Criteria andDomainIdIn(List<Integer> values) {
            addCriterion("domain_id in", values, "domainId");
            return (Criteria) this;
        }

        public Criteria andDomainIdNotIn(List<Integer> values) {
            addCriterion("domain_id not in", values, "domainId");
            return (Criteria) this;
        }

        public Criteria andDomainIdBetween(Integer value1, Integer value2) {
            addCriterion("domain_id between", value1, value2, "domainId");
            return (Criteria) this;
        }

        public Criteria andDomainIdNotBetween(Integer value1, Integer value2) {
            addCriterion("domain_id not between", value1, value2, "domainId");
            return (Criteria) this;
        }

        public Criteria andBrotherScoreIsNull() {
            addCriterion("brother_score is null");
            return (Criteria) this;
        }

        public Criteria andBrotherScoreIsNotNull() {
            addCriterion("brother_score is not null");
            return (Criteria) this;
        }

        public Criteria andBrotherScoreEqualTo(Integer value) {
            addCriterion("brother_score =", value, "brotherScore");
            return (Criteria) this;
        }

        public Criteria andBrotherScoreNotEqualTo(Integer value) {
            addCriterion("brother_score <>", value, "brotherScore");
            return (Criteria) this;
        }

        public Criteria andBrotherScoreGreaterThan(Integer value) {
            addCriterion("brother_score >", value, "brotherScore");
            return (Criteria) this;
        }

        public Criteria andBrotherScoreGreaterThanOrEqualTo(Integer value) {
            addCriterion("brother_score >=", value, "brotherScore");
            return (Criteria) this;
        }

        public Criteria andBrotherScoreLessThan(Integer value) {
            addCriterion("brother_score <", value, "brotherScore");
            return (Criteria) this;
        }

        public Criteria andBrotherScoreLessThanOrEqualTo(Integer value) {
            addCriterion("brother_score <=", value, "brotherScore");
            return (Criteria) this;
        }

        public Criteria andBrotherScoreIn(List<Integer> values) {
            addCriterion("brother_score in", values, "brotherScore");
            return (Criteria) this;
        }

        public Criteria andBrotherScoreNotIn(List<Integer> values) {
            addCriterion("brother_score not in", values, "brotherScore");
            return (Criteria) this;
        }

        public Criteria andBrotherScoreBetween(Integer value1, Integer value2) {
            addCriterion("brother_score between", value1, value2, "brotherScore");
            return (Criteria) this;
        }

        public Criteria andBrotherScoreNotBetween(Integer value1, Integer value2) {
            addCriterion("brother_score not between", value1, value2, "brotherScore");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("create_time is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("create_time is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(Date value) {
            addCriterion("create_time =", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(Date value) {
            addCriterion("create_time <>", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(Date value) {
            addCriterion("create_time >", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("create_time >=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(Date value) {
            addCriterion("create_time <", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(Date value) {
            addCriterion("create_time <=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<Date> values) {
            addCriterion("create_time in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<Date> values) {
            addCriterion("create_time not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(Date value1, Date value2) {
            addCriterion("create_time between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(Date value1, Date value2) {
            addCriterion("create_time not between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTurnsIsNull() {
            addCriterion("update_turns is null");
            return (Criteria) this;
        }

        public Criteria andUpdateTurnsIsNotNull() {
            addCriterion("update_turns is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateTurnsEqualTo(Integer value) {
            addCriterion("update_turns =", value, "updateTurns");
            return (Criteria) this;
        }

        public Criteria andUpdateTurnsNotEqualTo(Integer value) {
            addCriterion("update_turns <>", value, "updateTurns");
            return (Criteria) this;
        }

        public Criteria andUpdateTurnsGreaterThan(Integer value) {
            addCriterion("update_turns >", value, "updateTurns");
            return (Criteria) this;
        }

        public Criteria andUpdateTurnsGreaterThanOrEqualTo(Integer value) {
            addCriterion("update_turns >=", value, "updateTurns");
            return (Criteria) this;
        }

        public Criteria andUpdateTurnsLessThan(Integer value) {
            addCriterion("update_turns <", value, "updateTurns");
            return (Criteria) this;
        }

        public Criteria andUpdateTurnsLessThanOrEqualTo(Integer value) {
            addCriterion("update_turns <=", value, "updateTurns");
            return (Criteria) this;
        }

        public Criteria andUpdateTurnsIn(List<Integer> values) {
            addCriterion("update_turns in", values, "updateTurns");
            return (Criteria) this;
        }

        public Criteria andUpdateTurnsNotIn(List<Integer> values) {
            addCriterion("update_turns not in", values, "updateTurns");
            return (Criteria) this;
        }

        public Criteria andUpdateTurnsBetween(Integer value1, Integer value2) {
            addCriterion("update_turns between", value1, value2, "updateTurns");
            return (Criteria) this;
        }

        public Criteria andUpdateTurnsNotBetween(Integer value1, Integer value2) {
            addCriterion("update_turns not between", value1, value2, "updateTurns");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_brother
     *
     * @mbggenerated do_not_delete_during_merge Mon Jul 23 11:10:52 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_brother
     *
     * @mbggenerated Mon Jul 23 11:10:52 CST 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}